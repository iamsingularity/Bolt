//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.

//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime;
using System.Runtime.Serialization;
using System.Text;
using System.Threading.Tasks;

using TestService.Core;
using TestService.Core.Parameters;


namespace TestService.Core.Parameters
{
    [DataContract]
    public partial class UpdatePersonParameters
    {
        [DataMember(Order = 1)]
        public Person Person { get; set; }
    }

    [DataContract]
    public partial class UpdatePersonThatThrowsInvalidOperationExceptionParameters
    {
        [DataMember(Order = 1)]
        public Person Person { get; set; }
    }

    [DataContract]
    public partial class DoNothingWithComplexParameterAsAsyncParameters
    {
        [DataMember(Order = 1)]
        public List<Person> Person { get; set; }
    }

    [DataContract]
    public partial class DoNothingWithComplexParameterParameters
    {
        [DataMember(Order = 1)]
        public List<Person> Person { get; set; }
    }

    [DataContract]
    public partial class GetSimpleTypeParameters
    {
        [DataMember(Order = 1)]
        public int Arg { get; set; }
    }

    [DataContract]
    public partial class GetSimpleTypeAsAsyncParameters
    {
        [DataMember(Order = 1)]
        public int Arg { get; set; }
    }

    [DataContract]
    public partial class GetSinglePersonParameters
    {
        [DataMember(Order = 1)]
        public Person Person { get; set; }
    }

    [DataContract]
    public partial class GetSinglePersonAsAsyncParameters
    {
        [DataMember(Order = 1)]
        public Person Person { get; set; }
    }

    [DataContract]
    public partial class GetManyPersonsAsAsyncParameters
    {
        [DataMember(Order = 1)]
        public Person Person { get; set; }
    }

}

namespace TestService.Core
{
    public partial class TestContractDescriptor : Bolt.ContractDescriptor
    {
        public TestContractDescriptor() : base(typeof(TestService.Core.ITestContract), "TestContract")
        {
            UpdatePerson = Add("UpdatePerson", typeof(TestService.Core.Parameters.UpdatePersonParameters), typeof(ITestContract).GetMethod("UpdatePerson"));
            UpdatePersonThatThrowsInvalidOperationException = Add("UpdatePersonThatThrowsInvalidOperationException", typeof(TestService.Core.Parameters.UpdatePersonThatThrowsInvalidOperationExceptionParameters), typeof(ITestContract).GetMethod("UpdatePersonThatThrowsInvalidOperationException"));
            DoNothingAsAsync = Add("DoNothingAsAsync", typeof(Bolt.Empty), typeof(ITestContract).GetMethod("DoNothingAsAsync"));
            DoNothing = Add("DoNothing", typeof(Bolt.Empty), typeof(ITestContract).GetMethod("DoNothing"));
            DoNothingWithComplexParameterAsAsync = Add("DoNothingWithComplexParameterAsAsync", typeof(TestService.Core.Parameters.DoNothingWithComplexParameterAsAsyncParameters), typeof(ITestContract).GetMethod("DoNothingWithComplexParameterAsAsync"));
            DoNothingWithComplexParameter = Add("DoNothingWithComplexParameter", typeof(TestService.Core.Parameters.DoNothingWithComplexParameterParameters), typeof(ITestContract).GetMethod("DoNothingWithComplexParameter"));
            GetSimpleType = Add("GetSimpleType", typeof(TestService.Core.Parameters.GetSimpleTypeParameters), typeof(ITestContract).GetMethod("GetSimpleType"));
            GetSimpleTypeAsAsync = Add("GetSimpleTypeAsAsync", typeof(TestService.Core.Parameters.GetSimpleTypeAsAsyncParameters), typeof(ITestContract).GetMethod("GetSimpleTypeAsAsync"));
            GetSinglePerson = Add("GetSinglePerson", typeof(TestService.Core.Parameters.GetSinglePersonParameters), typeof(ITestContract).GetMethod("GetSinglePerson"));
            GetSinglePersonAsAsync = Add("GetSinglePersonAsAsync", typeof(TestService.Core.Parameters.GetSinglePersonAsAsyncParameters), typeof(ITestContract).GetMethod("GetSinglePersonAsAsync"));
            GetManyPersons = Add("GetManyPersons", typeof(Bolt.Empty), typeof(ITestContract).GetMethod("GetManyPersons"));
            GetManyPersonsAsAsync = Add("GetManyPersonsAsAsync", typeof(TestService.Core.Parameters.GetManyPersonsAsAsyncParameters), typeof(ITestContract).GetMethod("GetManyPersonsAsAsync"));
            Throws = Add("Throws", typeof(Bolt.Empty), typeof(ITestContract).GetMethod("Throws"));
            ThrowsCustom = Add("ThrowsCustom", typeof(Bolt.Empty), typeof(ITestContract).GetMethod("ThrowsCustom"));
            InnerOperation = Add("InnerOperation", typeof(Bolt.Empty), typeof(IInnerTestContract).GetMethod("InnerOperation"));
            InnerOperationExAsync = Add("InnerOperationExAsync", typeof(Bolt.Empty), typeof(IInnerTestContract).GetMethod("InnerOperationExAsync"));
            InnerOperation2 = Add("InnerOperation2", typeof(Bolt.Empty), typeof(IInnerTestContract2).GetMethod("InnerOperation2"));
            InnerOperationExAsync2 = Add("InnerOperationExAsync2", typeof(Bolt.Empty), typeof(IInnerTestContract2).GetMethod("InnerOperationExAsync2"));
        }

        public static readonly TestContractDescriptor Default = new TestContractDescriptor();

        public  Bolt.ActionDescriptor UpdatePerson { get; private set; }

        public  Bolt.ActionDescriptor UpdatePersonThatThrowsInvalidOperationException { get; private set; }

        public  Bolt.ActionDescriptor DoNothingAsAsync { get; private set; }

        public  Bolt.ActionDescriptor DoNothing { get; private set; }

        public  Bolt.ActionDescriptor DoNothingWithComplexParameterAsAsync { get; private set; }

        public  Bolt.ActionDescriptor DoNothingWithComplexParameter { get; private set; }

        public  Bolt.ActionDescriptor GetSimpleType { get; private set; }

        public  Bolt.ActionDescriptor GetSimpleTypeAsAsync { get; private set; }

        public  Bolt.ActionDescriptor GetSinglePerson { get; private set; }

        public  Bolt.ActionDescriptor GetSinglePersonAsAsync { get; private set; }

        public  Bolt.ActionDescriptor GetManyPersons { get; private set; }

        public  Bolt.ActionDescriptor GetManyPersonsAsAsync { get; private set; }

        public  Bolt.ActionDescriptor Throws { get; private set; }

        public  Bolt.ActionDescriptor ThrowsCustom { get; private set; }

        public  Bolt.ActionDescriptor InnerOperation { get; private set; }

        public  Bolt.ActionDescriptor InnerOperationExAsync { get; private set; }

        public  Bolt.ActionDescriptor InnerOperation2 { get; private set; }

        public  Bolt.ActionDescriptor InnerOperationExAsync2 { get; private set; }
    }
}