//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.

//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Bolt.Server;
using Bolt.Service.Test.Core;
using Bolt.Service.Test.Core.Parameters;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;


namespace Bolt.Server
{
    public partial class TestContractInvoker : Bolt.Server.ContractInvoker
    {
        public override void Init()
        {
            if (ContractDescriptor == null)
            {
                ContractDescriptor = Bolt.Service.Test.Core.TestContractDescriptor.Default;
            }

            AddAction(ContractDescriptor.SimpleMethodWithSimpleArguments, TestContract_SimpleMethodWithSimpleArguments);
            AddAction(ContractDescriptor.SimpleMethod, TestContract_SimpleMethod);
            AddAction(ContractDescriptor.SimpleMethodExAsync, TestContract_SimpleMethodExAsync);
            AddAction(ContractDescriptor.SimpleMethodWithCancellation, TestContract_SimpleMethodWithCancellation);
            AddAction(ContractDescriptor.ComplexFunction, TestContract_ComplexFunction);
            AddAction(ContractDescriptor.SimpleMethodWithComplexParameter, TestContractInner_SimpleMethodWithComplexParameter);
            AddAction(ContractDescriptor.SimpleFunction, TestContractInner_SimpleFunction);
            AddAction(ContractDescriptor.SimpleAsyncFunction, TestContractInner_SimpleAsyncFunction);
            AddAction(ContractDescriptor.MethodWithManyArguments, TestContractInner_MethodWithManyArguments);

            base.Init();
        }

        public virtual Bolt.Service.Test.Core.TestContractDescriptor ContractDescriptor { get; set; }

        protected virtual async Task TestContract_SimpleMethodWithSimpleArguments(Bolt.Server.ServerExecutionContext context)
        {
            var parameters = await DataHandler.ReadParametersAsync<SimpleMethodWithSimpleArgumentsParameters>(context);
            var instance = await InstanceProvider.GetInstanceAsync<ITestContract>(context);
            instance.SimpleMethodWithSimpleArguments(parameters.Val);
            await ResponseHandler.Handle(context);
        }

        protected virtual async Task TestContract_SimpleMethod(Bolt.Server.ServerExecutionContext context)
        {
            var instance = await InstanceProvider.GetInstanceAsync<ITestContract>(context);
            instance.SimpleMethod();
            await ResponseHandler.Handle(context);
        }

        protected virtual async Task TestContract_SimpleMethodExAsync(Bolt.Server.ServerExecutionContext context)
        {
            var instance = await InstanceProvider.GetInstanceAsync<ITestContract>(context);
            await instance.SimpleMethodExAsync();
            await ResponseHandler.Handle(context);
        }

        protected virtual async Task TestContract_SimpleMethodWithCancellation(Bolt.Server.ServerExecutionContext context)
        {
            var parameters = await DataHandler.ReadParametersAsync<SimpleMethodWithCancellationParameters>(context);
            var instance = await InstanceProvider.GetInstanceAsync<ITestContract>(context);
            instance.SimpleMethodWithCancellation(context.CallCancelled);
            await ResponseHandler.Handle(context);
        }

        protected virtual async Task TestContract_ComplexFunction(Bolt.Server.ServerExecutionContext context)
        {
            var instance = await InstanceProvider.GetInstanceAsync<ITestContract>(context);
            var result = instance.ComplexFunction();
            await ResponseHandler.Handle(context, result);
        }

        protected virtual async Task TestContractInner_SimpleMethodWithComplexParameter(Bolt.Server.ServerExecutionContext context)
        {
            var parameters = await DataHandler.ReadParametersAsync<SimpleMethodWithComplexParameterParameters>(context);
            var instance = await InstanceProvider.GetInstanceAsync<ITestContractInner>(context);
            instance.SimpleMethodWithComplexParameter(parameters.CompositeType);
            await ResponseHandler.Handle(context);
        }

        protected virtual async Task TestContractInner_SimpleFunction(Bolt.Server.ServerExecutionContext context)
        {
            var instance = await InstanceProvider.GetInstanceAsync<ITestContractInner>(context);
            var result = instance.SimpleFunction();
            await ResponseHandler.Handle(context, result);
        }

        protected virtual async Task TestContractInner_SimpleAsyncFunction(Bolt.Server.ServerExecutionContext context)
        {
            var instance = await InstanceProvider.GetInstanceAsync<ITestContractInner>(context);
            var result = await instance.SimpleAsyncFunction();
            await ResponseHandler.Handle(context, result);
        }

        protected virtual async Task TestContractInner_MethodWithManyArguments(Bolt.Server.ServerExecutionContext context)
        {
            var parameters = await DataHandler.ReadParametersAsync<MethodWithManyArgumentsParameters>(context);
            var instance = await InstanceProvider.GetInstanceAsync<ITestContractInner>(context);
            instance.MethodWithManyArguments(parameters.Arg1, parameters.Arg2, parameters.Time);
            await ResponseHandler.Handle(context);
        }
    }
}

